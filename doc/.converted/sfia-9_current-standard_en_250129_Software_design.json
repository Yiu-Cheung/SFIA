# Converted from: .\doc\sfia-9_current-standard_en_250129.xlsx
# Format: json
# Metadata: {'source': '.\\doc\\sfia-9_current-standard_en_250129.xlsx', 'type': 'xlsx', 'format': 'json', 'sheet': 'Skills', 'skill': 'Software design', 'row': 51, 'skill_code': 'SWDN', 'category': 'Development and implementation', 'subcategory': 'Systems development'}
# Content Length: 4381 characters

================================================================================

{
  "skill_name": "Software design",
  "code": "SWDN",
  "url": "https://sfia-online.org/en/skillcode/9/SWDN",
  "category": "Development and implementation",
  "subcategory": "Systems development",
  "overall_description": "Architecting and designing software to meet specified requirements, ensuring adherence to established standards and principles.",
  "guidance_notes": "Activities may include, but are not limited to:\n\ndesigning and architecting software applications, components, interfaces and related characteristics (including security)\ndesigning for scalability, performance, resilience, security and privacy from the outset, aligned with cloud computing, distributed systems and data protection\napplying design concepts, patterns, modelling techniques and architectural styles such as microservices, serverless and domain-driven design to develop software designs and architectures, which serve as the foundation for software construction and verification\nevaluating alternative solutions and trade-offs to facilitate design decisions\nconsidering functional and non-functional requirements such as the target environment, performance, security, scalability and integration with existing systems\nadopting and adapting software design models, tools and techniques based on the context of the work, including contemporary practices such as cloud-native architectures, edge computing, cyber-physical systems and agile and iterative design practices\ndeveloping prototypes/simulations to enable informed decision-making.\n\nUnlike programming and designing at the code level, this skill focuses on higher-level design, addressing architecture and system-wide considerations.",
  "level_descriptions": {
    "level_2": "Creates and documents detailed designs for simple software applications or components. \nApplies agreed modelling techniques, standards, patterns and tools. \nContributes to the design of components of larger software systems, ensuring alignment with overall design requirements, including security.\nReviews own work.",
    "level_3": "Undertakes complete design of moderately complex software applications or components.\nApplies agreed standards, guidelines, patterns and tools. Assists as part of a team in the design of components of larger software systems. Specifies user and/or system interfaces. \nCreates multiple design views to address the different stakeholders' concerns and to handle functional and non-functional requirements, considering all relevant factors, including security. Assists in the evaluation of options and trade-offs. \nCollaborates in reviews of work with others as appropriate.",
    "level_4": "Designs and architects complex software applications, components and modules.\nUses appropriate modelling techniques in line with agreed software design standards, guidelines, patterns and methodologies. Produces and communicates multiple design views to address stakeholder concerns and meet both functional and non-functional requirements including security.\nIdentifies, evaluates and recommends design alternatives and trade-offs. Models, simulates or prototypes proposed software behaviours to secure stakeholder approval and facilitate effective software construction.  \nReviews, verifies and enhances own designs against specifications and leads reviews of others' designs.",
    "level_5": "Specifies, designs and architects large or complex software applications, components and modules. \nAdopts and adapts software design methods, tools and techniques. Undertakes impact analysis on major design options, makes recommendations and assesses and manages associated risks. Specifies prototypes/simulations to enable informed decision-making. \nEvaluates software designs to ensure adherence to standards and identifies corrective action. Ensures the software design balances functional, quality, security and systems management requirements. \nContributes to the development of organisational software design and architecture policies and standards.",
    "level_6": "Leads the selection and development of software design and architectural methods, tools and techniques. \nDefines and maintains architectural principles, patterns and frameworks to guide software design and development across the organisation.\nEnsures adherence to technical strategies and systems architectures (including security)."
  }
}