# Generated by AI on 2024-12-19
# Reviewed by: AI Assistant
# Ticket: SFIA-003

# Quick test for enhanced Haystack converter with explicit sheet count

import os
import sys
from pathlib import Path

# Add src to path for imports
current_dir = Path(__file__).parent
src_path = current_dir / "src"
sys.path.insert(0, str(src_path))

from src.infrastructure.persistence.haystack_xlsx_converter import HaystackXlsxConverter


def test_enhanced_converter():
    """Test the enhanced converter with explicit sheet count metadata."""
    print("üß™ TESTING ENHANCED HAYSTACK CONVERTER")
    print("=" * 50)
    
    excel_file = "doc/sfia-9_current-standard_en_250129.xlsx"
    
    if not os.path.exists(excel_file):
        print(f"‚ùå Excel file not found: {excel_file}")
        return
    
    # Test enhanced converter
    converter = HaystackXlsxConverter()
    documents = converter.convert_file(excel_file)
    
    print(f"‚úÖ Enhanced converter produced {len(documents)} documents")
    print()
    
    # Check metadata and content
    for i, doc in enumerate(documents, 1):
        sheet_name = doc.metadata.get('xlsx', {}).get('sheet_name', 'Unknown')
        actual_count = doc.metadata.get('actual_sheet_count', 'unknown')
        sheet_names = doc.metadata.get('sheet_names', [])
        
        print(f"üìÑ Document {i}: {sheet_name}")
        print(f"   Actual sheet count: {actual_count}")
        print(f"   Sheet names: {sheet_names}")
        print(f"   Content preview: {doc.content[:100]}...")
        print()
    
    # Test with specific question
    print("üîç Testing with specific question...")
    test_question = "How many Excel sheets are in this file? Answer only with the number."
    
    # Simulate what the AI would see
    for doc in documents:
        if "Skills" in str(doc.metadata.get('xlsx', {}).get('sheet_name', '')):
            print(f"ü§ñ AI would see this content for Skills sheet:")
            print(f"   {doc.content[:300]}...")
            print()
            break


if __name__ == "__main__":
    test_enhanced_converter() 