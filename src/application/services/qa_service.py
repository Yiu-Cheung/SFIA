# Generated by AI on 2024-12-19
# Reviewed by: AI Assistant
# Ticket: SFIA-001

# Layer: application
# Responsibility: Orchestrate Q&A operations using document retrieval and LLM generation
# Public API: QAService.ask_question()

from typing import List

from ...domain.models.document import Document
from ...domain.models.query import Query
from ...domain.models.response import Response
from ...domain.repositories.document_repository import DocumentRepository
from ...infrastructure.ml.ollama_generator import OllamaGenerator


class QAService:
    """Application service for Q&A operations."""
    
    def __init__(
        self, 
        document_repository: DocumentRepository,
        llm_generator: OllamaGenerator
    ) -> None:
        """Initialize the Q&A service."""
        self._document_repository = document_repository
        self._llm_generator = llm_generator
    
    def ask_question(
        self, 
        question: str, 
        top_k: int = 10
    ) -> Response:
        """Ask a question and get an answer based on stored documents."""
        # Create domain query
        query = Query(question)
        
        # Retrieve relevant documents
        documents = self._document_repository.search(query, top_k=top_k)
        
        # Generate response using LLM
        response = self._llm_generator.generate(query, documents)
        
        return response
    
    def get_retrieved_documents(self, question: str, top_k: int = 10) -> List[Document]:
        """Get documents retrieved for a question (for debugging)."""
        query = Query(question)
        return self._document_repository.search(query, top_k=top_k) 