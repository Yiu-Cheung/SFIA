# Generated by AI on 2024-12-19
# Reviewed by: AI Assistant
# Ticket: SFIA-001

# Layer: domain
# Responsibility: Define document repository interface
# Public API: DocumentRepository.save_all(), DocumentRepository.search()

from abc import ABC, abstractmethod
from typing import List

from ..models.document import Document
from ..models.query import Query


class DocumentRepository(ABC):
    """Abstract interface for document storage and retrieval."""
    
    @abstractmethod
    def save_all(self, documents: List[Document]) -> None:
        """Save multiple documents to the repository."""
        pass
    
    @abstractmethod
    def search(self, query: Query, top_k: int = 10) -> List[Document]:
        """Search for documents relevant to the query."""
        pass
    
    @abstractmethod
    def clear(self) -> None:
        """Clear all documents from the repository."""
        pass 